{
    "generators": [ 
        {
            "_comment": "Salesbaskets Topic Data Generator",

            "name": "salesbasketsGenerator",
            "topic": "salesbaskets-shadow",
            "key": {
                "_gen": "var", 
                "var": "storeName"
            },
            "vars": {
                "basketMin": {
                    "_comment": "Minimum number of items in the basket",
                    "_gen": "env",
                    "var": "basketMin",
                    "as": "integer"
                },
                "basketMax": {
                    "_comment": "Maximum number of items in the basket",
                    "_gen": "env",
                    "var": "basketMax",
                    "as": "integer"
                },
                "quantityMin": {
                    "_comment": "Minimum amount for the quantity bound",
                    "_gen": "env",
                    "var": "quantMin",
                    "as": "integer"
                },
                "quantityMax": {
                    "_comment": "Maximum amount for the quantity bound",
                    "_gen": "env",
                    "var": "quantMax",
                    "as": "integer"
                },
                "vatPercentage": {
                    "_comment": "Vat %, actual rate is environment variable value",
                    "_gen": "env",
                    "var": "vatPercentage",
                    "as": "double"
                },
                "vatRate": {
                    "_comment": "Vat Rate to be applied, calculated by adding 1 & vatPercentage together",
                    "_gen": "add",
                    "args": [
                        {"_gen": "var", "var": "vatPercentage"},
                        1
                    ],
                    "as": "double"
                  },
                "maxEvents": {
                    "_comment": "Maximum events to generate, aka number of baskets",
                    "_gen": "env",
                    "var": "maxEvents",
                    "as": "integer"
                },

                "itemCount": {
                    "_gen": "uniformDistribution",
                    "bounds": [
                        {"_gen":"var", "var": "basketMin"}, 
                        {"_gen":"var", "var": "basketMax"}
                    ],                        
                    "decimals": 0
                },

                "invoiceNumber": { "_gen": "uuid" },

                "store": {
                    "_comment": "List of stores to pick from",
                    "_gen": "oneOf",
                    "choices": {
                      "_gen": "loadJsonFile",
                      "file": "/workspace/stores.json"
                    }
                },
                "storeName": {
                    "_gen": "var",
                    "var": "store",
                    "path": ["name"]
                },
                "clerk": {
                    "_comment": "List of clerks to pick from",
                    "_gen": "oneOf",
                    "choices": {
                        "_gen": "loadJsonFile",
                        "file": "/workspace/clerks.json"
                    }
                },
                "basketItems": {
                    "_comment": "Size (number of items) of the basket is defined by the bounds value below",
                    "_gen": "repeatedly",
                    "n": {
                        "_gen": "var",
                        "var": "itemCount",
                        "decimals": 0
                    },
                    "target": { 
                        "_gen": "merge", 
                        "objects": [
                            {
                                "_comment": "List of potential basket items to pick from",
                                "_gen": "oneOf",
                                "choices":{
                                    "_gen": "loadJsonFile",
                                    "file": "/workspace/basketItems.json"
                                }
                            },
                            {
                                "quantity": {
                                    "_comment": "Random quantity of items for the selected basket item, will be between the quanMin and quanMax environment variables provided",
                                    "_gen": "uniformDistribution", 
                                    "bounds": [
                                        {"_gen":"var", "var": "quantityMin"}, 
                                        {"_gen":"var", "var": "quantityMax"}
                                    ], 
                                    "decimals": 0}
                            }
                        ]
                    }
                },
                "subtotals": {
                    "_gen": "repeatedly",
                    "n": {
                        "_gen": "var",
                        "var": "itemCount"
                    },
                    "iterateVars": [
                        "basketItems"
                    ],
                    "target": {
                        "_comment": "The price * quantity of the basket item selected, aka line item subtotal",
                        "_gen": "multiply",
                        "args": [
                            {
                                "_gen": "var", 
                                "var": "basketItems", 
                                "path": ["price"]
                            },
                            {
                                "_gen": "var", 
                                "var": "basketItems", 
                                "path": ["quantity"]
                            }
                        ]
                    }
                }
            },
            "value": {
                "_comment": "Our Salesbaskets payload",
                "invoiceNumber": {
                    "_gen": "var",
                    "var": "invoiceNumber"
                },
                "saleDateTime_Ltz": {
                    "_gen": "formatDateTime",
                    "ms": {
                        "_gen": "now"
                      },
                      "format": "yyyy-MM-dd'T'HH:mm:ss"
                },
                "salesTimetamp_Epoc": {
                    "_gen": "now"
                },
                "store": {
                    "_gen": "var",
                    "var": "store"
                },
                "clerk": {
                    "_gen": "var",
                    "var": "clerk"
                },
                "basketItems": {
                    "_gen": "var",
                    "var": "basketItems"
                },
                "total": {
                    "_gen": "var",
                    "var": "subtotals"
                }
          }
        },
        {
            "_comment": "Salespayments Topic Data Generator",

            "name": "salespaymentsGenerator",
            "topic": "salespayments-shadow",
            "key": {
                "_gen": "lookup",
                "topic": "salesbaskets-shadow",
                "path": ["value", "storeName"]
            },
            "fork": {
                "key": {
                    "_gen": "lookup",
                    "topic": "salesbaskets-shadow",
                    "path": ["value", "invoiceNumber"]
                },
                "paid": {
                    "_gen": "lookup",
                    "topic": "salesbaskets-shadow",
                    "path": ["value", "total"]
                },
                "stagger": {
                    "ms": {
                        "_gen": "uniformDistribution",
                        "bounds": [1000, 300000]
                    }
                }
            },
            "value": {
                "_comment": "Our Salespayments payload",
                "invoiceNumber": {
                    "_comment": "Retrieve the invoiceNumber from the Salesbaskets payload",
                    "_gen": "var",
                    "var": "forkKey"
                },
                "payDateTime_Ltz": {
                    "_gen": "formatDateTime",
                    "ms": {
                        "_gen": "now"
                      },
                      "format": "yyyy-MM-dd'T'HH:mm:ss"
                },
                "payTimestamp_Epoc": {
                    "_gen": "now"
                },
                "finTransactionId": {
                    "_gen": "uuid"
                }
            }
        }
    ],
    "globalConfigs": {
      "maxEvents": {"_gen":"var", "var": "maxEvents"}
    },
    "connections": {
        "confluent-kafka": {
            "kind": "kafka",
            "topicPolicy": {
                "policy": "dropAndCreate",
                "partitions": 1,
                "replicationFactor": 1
            },
            "producerConfigs": {
                "bootstrap.servers": "localhost:9092",
                "key.serializer": "io.shadowtraffic.kafka.serdes.JsonSerializer",
                "value.serializer": "io.shadowtraffic.kafka.serdes.JsonSerializer"
            }
        }
    }
}


